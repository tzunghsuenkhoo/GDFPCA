% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GDFPCA.R
\name{GDFPCA}
\alias{GDFPCA}
\title{Generalized dynamic principal component analysis}
\usage{
GDFPCA(
  X,
  p = 1,
  center = TRUE,
  auto_comp = FALSE,
  expl_var = 0.8,
  niter_max = 500
)
}
\arguments{
\item{X}{An fd object (see fda package)}

\item{p}{Integer. The number of GDFPC (generalized dynamic functional principal components) kept to approximate the original process.  Default is 1.}

\item{center}{Logical. If TRUE, centers the fd object. Default = TRUE}

\item{auto_comp}{Logical. If TRUE, computes further GDFPCs until the proportion of explained variance reaches expl_var.
Otherwise, use p. Default = FALSE.}

\item{expl_var}{A number between 0 and 1. Desired proportion of explained variance (used only if auto_comp==TRUE). Default is 0.8}

\item{niter_max}{Integer. Maximum number of iterations. Default is 500}
}
\value{
\item{Xhat}{The approximation of X with GDPCs.}
\item{GDFPC}{Estimated \eqn{p \times (n+k)} matrix of GDPCs with k lags}
\item{GDPCA_coefs}{Estimated coefficients}
\item{NMSE}{The normalized mean squared error with p number of GDPCs}
\item{VAR}{The numerical explained variance with p number of GDPCs}
}
\description{
Generalized dynamic principal component analysis
}
\examples{
     # Create 50 sample paths of a Wiener process by using its truncated Karhunen-Loeve expansion 
     
     argvals = seq(0, 1, length = 100)
     efW <- funData::simFunData(seq(0, 1, length = 100),M = 100 ,eFunType = "Wiener", eValType = "wiener", N = 50)
     efW.fd <- funData::funData2fd(efW$simData)
     
     # Plot the functional process
     plot(efW.fd)
     
     # Perform GDFPCA on the process
     Res <- GDFPCA(X = efW.fd, p = 1)
     
     # Plot the approximated process
     plot(Res$Xhat)
     
     # Plot 1st GDFPC
     plot(Res$GDFPC)
     
}
\references{
PeÃ±a, D., & Yohai, V. J. (2016). Generalized dynamic principal components.
Journal of the American Statistical Association, 111(515), 1121-1131.
}
